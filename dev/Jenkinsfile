pipeline {
    agent any
    environment {
        DOCKER_REGISTRY = 'https://registry.hub.docker.com'
        DOCKER_IMAGE_NAME = 'multiply0124/ci_cd_sample'
        IMAGE_TAG = "${1000}${env.BUILD_NUMBER}"
    }
    stages {
        stage('Clone repository') {
            steps {
                git credentialsId: 'm-ultiply', url: 'https://github.com/youngBin-Yoon/ci_cd_sample.git'
            }
        }

        stage('Build image') {
            steps {
                script {
                    app = docker.build("${DOCKER_IMAGE_NAME}:${IMAGE_TAG}", "-f dev/Dockerfile .")
                }
            }
        }

        stage('Push image') {
            steps {
                script {
                    docker.withRegistry(DOCKER_REGISTRY, 'multiply0124') {
                        app.push(IMAGE_TAG)
                        app.push("latest")
                    }
                }
            }
        }

        stage('Pull image and Deploy') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'multiply0124', usernameVariable: 'DOCKER_REGISTRY_USERNAME', passwordVariable: 'DOCKER_REGISTRY_PASSWORD')]) {
                    sshPublisher(
                        continueOnError: false, failOnError: true,
                        publishers: [
                            sshPublisherDesc(
                                configName: "remote_server",
                                verbose: true,
                                transfers: [
                                    sshTransfer(
                                        execCommand: """
                                            cd docker/admin_api-dev
                                            docker image prune -f
                                            echo '${env.DOCKER_REGISTRY_PASSWORD}' | docker login -u ${env.DOCKER_REGISTRY_USERNAME} --password-stdin
                                            docker-compose pull
                                            docker-compose down
                                            docker-compose up -d
                                        """
                                    )
                                ]
                            )
                        ]
                    )
                }
            }
        }
    }
}
